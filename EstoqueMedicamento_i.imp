IMPLEMENTATION EstoqueMedicamento_i

REFINES EstoqueMedicamento

CONCRETE_VARIABLES
    medicamento_nome , medicamento_lote , medicamento_validade , estoque_i , dia_i , wm
    
INVARIANT
    medicamento_nome : (0..limit) --> NOME 
    & medicamento_lote : (0..limit) --> NAT
    & medicamento_validade : (0..limit) --> NAT
    & estoque_i : (0..limit) --> NAT
    //& dom ( medicamento_nome ) = dom ( medicamento )
    //& dom ( medicamento_lote ) = dom ( medicamento )
    //& dom ( medicamento_validade ) = dom ( medicamento )
    //& ran ( medicamento_nome ) = dom ( dom ( ran ( medicamento ) ) )
    //& ran ( medicamento_lote ) = ran ( dom ( ran ( medicamento ) ) )
    //& ran ( medicamento_validade ) = ran ( ran ( medicamento ) )
    & wm : (0..limit)
    & dia_i : NAT
    & dia_i = dia
    //& estoque_i = estoque

VALUES NOME = 100 .. 299; limit = 500; empty = 100


INITIALISATION 
    medicamento_nome := (0..limit)*{100};
    medicamento_lote := (0..limit)*{0};
    medicamento_validade := (0..limit)*{0}; 
    dia_i := 0;
    estoque_i :=  (0..limit) * {0};
    wm := 0
                  
 OPERATIONS
     
    adicionar_medicamento ( ID , nome , lote , validade ) =
        BEGIN
            VAR yy IN yy := limit;
            IF(wm < yy)
            THEN
                medicamento_nome ( wm ) := nome ;
                medicamento_lote ( wm ) := lote ;
                medicamento_validade ( wm ) := validade ;
                estoque_i ( wm ) := 0 ;
                wm := wm + 1
            END
            END
        END ;

    remover_medicamento ( ID ) =
        BEGIN
            VAR mm IN
                mm := ID + 1 ;
                WHILE mm < wm DO
                        medicamento_nome( mm - 1 ) := medicamento_nome( mm ) ;
                        medicamento_lote( mm - 1 ) := medicamento_lote( mm ) ;
                        medicamento_validade( mm - 1 ) := medicamento_validade( mm ) ;
                    mm := mm + 1
                    INVARIANT mm : (0..limit) & !xx . ((xx : 0..(mm-1)) => (xx : dom((0..(mm-1)) <| medicamento_validade)) )
                    VARIANT ( wm - mm )
                END ;
                wm := wm - 1
            END
        END ;

    adicionar_estoque ( ID , qtd ) =
        BEGIN
            estoque_i ( ID ) := estoque_i ( ID ) + qtd
        END ;

    remover_estoque ( ID , qtd ) =
        BEGIN
            estoque_i ( ID ) := estoque_i ( ID ) - qtd
        END ;
    /*
    qtd <-- qtd_medicamento(ID) =
        BEGIN
            qtd := estoque_i(ID)
        END ;
    */
    /*
    oo <-- verificar_validade(xx) =
        BEGIN
            oo := max ( { 0 , min ( medicamento_validade [ { xx } ] ) - dia_i } )
        END ;
    */

    incrementar_dia =
        BEGIN
          dia_i := dia_i + 1
        END ;

    hoje <-- consultar_dia =
        BEGIN
            hoje := dia_i
        END
END
