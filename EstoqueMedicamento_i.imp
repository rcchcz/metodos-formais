IMPLEMENTATION EstoqueMedicamento_i

REFINES EstoqueMedicamento

CONCRETE_VARIABLES
    medicamento_nome , medicamento_lote , medicamento_validade , estoque_i , dia_i , wm

INVARIANT
    medicamento_nome : NAT +-> NOME /*id -> nome*/
    & medicamento_lote : NAT +-> NAT /*id -> lote*/
    & medicamento_validade : NAT +-> NAT /*id -> validade*/
    & estoque_i : NAT +-> NAT /*id -> qtd, qtd pode ser zero*/
    & dom ( medicamento_nome ) = dom ( medicamento_lote )
    & dom ( medicamento_lote ) = dom ( medicamento_validade )
    & dom ( medicamento_validade ) = dom ( medicamento )
    & ran ( medicamento_nome ) = dom ( dom ( ran ( medicamento ) ) )
    & ran ( medicamento_lote ) = ran ( dom ( ran ( medicamento ) ) )
    & ran ( medicamento_validade ) = ran ( ran ( medicamento ) )
    & wm : NAT /*wm = 0 qnd ta vazio*/
    & dia_i : NAT
    & dia_i = dia
    & estoque_i = estoque

VALUES NOME = 500 .. 2000

INITIALISATION medicamento_nome := {}
               ; medicamento_lote := {}
               ; medicamento_validade := {}
               ; dia_i := 0
               ; estoque_i := {}
               ; wm := 0

 OPERATIONS
    adicionar_medicamento ( ID , nome , lote , validade ) =
        BEGIN
            medicamento_nome ( wm ) := nome ;
            medicamento_lote ( wm ) := lote ;
            medicamento_validade ( wm ) := validade ;
            estoque_i ( wm ) := 0 ;
            wm := wm + 1
        END ;

    remover_medicamento ( ID ) =
        BEGIN
            VAR mm , len IN
                mm := ID + 1 ;
                len := card ( dom ( medicamento_nome ) ) ;
                WHILE mm < len DO
                        medicamento_nome ( mm - 1 ) := medicamento_nome ( mm ) ;
                        medicamento_lote ( mm - 1 ) := medicamento_lote ( mm ) ;
                        medicamento_validade ( mm - 1 ) := medicamento_validade ( mm ) ;
                    mm := mm + 1
                    INVARIANT mm : NAT
                    VARIANT ( len - mm )
                END ;
                wm := wm - 1
            END
        END ;

    adicionar_estoque ( ID , qtd ) =
        BEGIN
            estoque_i ( ID ) := estoque_i ( ID ) + qtd
        END ;

    remover_estoque ( ID , qtd ) =
        BEGIN
            estoque_i ( ID ) := estoque_i ( ID ) - qtd
        END ;

    qtd <-- qtd_medicamento ( ID ) =
        BEGIN
            qtd := estoque_i ( ID )
        END ;

    oo <-- verificar_validade ( xx ) =
        BEGIN
            oo := max ( { 0 , min ( medicamento_validade [ { xx } ] ) - dia_i } )
        END ;

    incrementar_dia =
        BEGIN
          dia_i := dia_i + 1
        END ;

    hoje <-- consultar_dia =
        BEGIN
            hoje := dia_i
        END
END
